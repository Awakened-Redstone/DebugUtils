plugins {
    //Using loom here so we can apply parchment
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

loom {
    mixin {
        useLegacyMixinAp = false
    }
    accessWidenerPath.set file("src/main/resources/${modid}.accesswidener")
}

//Dont remap jar
tasks.withType(net.fabricmc.loom.task.AbstractRemapJarTask).each {
    it.targetNamespace = "named"
}

configurations {
    shade // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
}

repositories {
    maven {
        name = 'ParchmentMC'
        url = 'https://maven.parchmentmc.org'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchment_version_mc}:${rootProject.parchment_version}@zip")
    }
    //Here to shut up the missing annotation errors. Do not use!
    compileOnly "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
}

sourceSets.main.resources {
    srcDir "src/generated/resources"
}

processResources {
    filesMatching("pack.mcmeta") {
        expand "mod": rootProject.name
    }
    exclude '.cache/**'
}

shadowJar {
    configurations = [project.configurations.shade]
    classifier "dev-shadow"
}

jar {
    dependsOn shadowJar
}

remapJar {
    inputFile.set shadowJar.archiveFile
}

sourcesJar {
    from(rootProject.file("LICENSE"))
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact remapJar
            artifact sourcesJar
            artifact javadocJar
            artifactId project.modid
            version project.version
        }
    }

    repositories {
        maven {
            url "https://gitlab.com/api/v4/projects/21830712/packages/maven"
            //url "https://maven.pkg.github.com/flemmli97/<>"
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GPR_USER")
                password = project.findProperty("gpr.gitlab.token") ?: System.getenv("GPR_GITLAB_TOKEN")
                //password = project.findProperty("gpr.github.token") ?: System.getenv("GPR_TOKEN")
            }
        }
    }
}